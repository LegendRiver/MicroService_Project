<?php

namespace DuplicateAd\FBManager;

use CommonMoudle\Constant\LogConstant;
use CommonMoudle\Helper\CommonHelper;
use CommonMoudle\Helper\ServiceHelper;
use CommonMoudle\Http\HttpClient;
use CommonMoudle\Http\RequestInfo;
use CommonMoudle\Logger\ServerLogger;
use DuplicateAd\Constant\DAEndpointConstant;
use DuplicateAd\Constant\DAResponseField;
use DuplicateAd\Constant\RequestParamConstant;
use DuplicateAd\Constant\DACommonConstant;

class FBServiceFacade
{
    public static function getAdsetAllField($adsetId)
    {
        $queryParam = array(RequestParamConstant::FB_SERVICE_ADSET_ID => $adsetId);

        $response = HttpClient::instance()->sendRequest(DACommonConstant::FB_SERVER_KEY, RequestInfo::METHOD_GET,
            DAEndpointConstant::QUERY_ADSET_FIELD, $queryParam);

        if(!ServiceHelper::checkResponse($response))
        {
            ServerLogger::instance()->writeLog(LogConstant::LOGGER_LEVEL_ERROR, '#getAdsetAllField#Failed to check response');
            return false;
        }

        $bodyData = ServiceHelper::getBodyData($response);
        $adsetField = CommonHelper::getArrayValueByKey(DAResponseField::ADSET_ALL_FIELD, $bodyData);
        return $adsetField;
    }

    public static function getCreativeField($adId)
    {
        $queryParam = array(RequestParamConstant::FB_SERVICE_AD_ID => $adId);

        $response = HttpClient::instance()->sendRequest(DACommonConstant::FB_SERVER_KEY, RequestInfo::METHOD_GET,
            DAEndpointConstant::QUERY_CREATIVE_FIELD, $queryParam);

        if(!ServiceHelper::checkResponse($response))
        {
            ServerLogger::instance()->writeLog(LogConstant::LOGGER_LEVEL_ERROR, '#getCreativeField#Failed to check response');
            return false;
        }

        $bodyData = ServiceHelper::getBodyData($response);
        $creativeField = CommonHelper::getArrayValueByKey(DAResponseField::CREATIVE_ALL_FIELD, $bodyData);
        return $creativeField;
    }

    public static function getFirstAdId($adsetId)
    {
        $queryParam = array(RequestParamConstant::FB_SERVICE_ADSET_ID => $adsetId);

        $response = HttpClient::instance()->sendRequest(DACommonConstant::FB_SERVER_KEY, RequestInfo::METHOD_GET,
            DAEndpointConstant::QUERY_FB_FIRST_AD, $queryParam);

        if(!ServiceHelper::checkResponse($response))
        {
            ServerLogger::instance()->writeLog(LogConstant::LOGGER_LEVEL_ERROR, '#getFirstAdId#Failed to check response');
            return false;
        }

        $bodyData = ServiceHelper::getBodyData($response);
        $adId = CommonHelper::getArrayValueByKey(DAResponseField::FIRST_AD_ID, $bodyData);
        return $adId;
    }

    public static function getAdType($adId='')
    {
        if(empty($adId))
        {
            return DACommonConstant::AD_TYPE_NONE_TYPE;
        }

        $queryParam = array(RequestParamConstant::FB_SERVICE_AD_ID => $adId);
        $response = HttpClient::instance()->sendRequest(DACommonConstant::FB_SERVER_KEY, RequestInfo::METHOD_GET,
            DAEndpointConstant::QUERY_FB_AD_TYPE, $queryParam);

        if(!ServiceHelper::checkResponse($response))
        {
            ServerLogger::instance()->writeLog(LogConstant::LOGGER_LEVEL_ERROR, '#getAdType#Failed to check response');
            return false;
        }

        $bodyData = ServiceHelper::getBodyData($response);
        $adType = CommonHelper::getArrayValueByKey(DAResponseField::AD_TYPE, $bodyData);

        return $adType;
    }
}